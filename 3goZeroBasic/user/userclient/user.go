// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: user.proto

package userclient

import (
	"context"

	"goZeroStudy/3goZeroBasic/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserReq  = user.GetUserReq
	GetUserResp = user.GetUserResp

	User interface {
		// 定义rpc方法
		GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserResp, error)
		Ping(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// 定义rpc方法
func (m *defaultUser) GetUser(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetUser(ctx, in, opts...)
}

func (m *defaultUser) Ping(ctx context.Context, in *GetUserReq, opts ...grpc.CallOption) (*GetUserResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
